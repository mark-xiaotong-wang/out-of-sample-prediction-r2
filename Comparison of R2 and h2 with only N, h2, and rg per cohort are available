/*
 * Codes below are used to show that under the condition outlined by Equation 6, out-of-sample prediction R2 can be higher than 
 * SNP-based heritability in the meta-analysis cohort used to generate genetic predictors (as shown in Figure S6)
 * 
 * This code only works as long as per-cohort effective sample size, per-cohort h2 estimates, and rg between all pairs of cohort are available.
 *
 */

################################################################
Rationale for cohort selection
N > 2,000
0 <= SNP-based h2 estimates <= 1

To get a complete rg matrix:
Remove cohort with largest number of NA, if two or more cohorts
have same numbers of NA, remove the cohort with the smallest sample
size. Repeat this step until no remaining NAs. 
################################################################
#Colnames for the h2 input are:
#Cohort	N	h2	h2_SE; For binary trait, N is the effective sample size. h2 and se of h2 are in liability scale
h2 <- read.table("h2_EA_cohorts_with_valid_h2_and_rg.txt",header=T)

#Colnames for the rg input are:
#Cohort1 Cohort2 rg	rg_se
rg <- read.table("rg_EA_cohorts_with_valid_h2_and_rg.txt",header=T)

#Here we input the name of the left-out cohort; Write a for loop will make life easier if you've got lots of cohort
out_of_sample_prediction_cohort <- c("Add_Health") #c("HRS")
cohort_meta <- h2[which(!(h2$Cohort %in% out_of_sample_prediction_cohort)),]
cohort_pred <- h2[which((h2$Cohort %in% out_of_sample_prediction_cohort)),]
h2 <- rbind(cohort_meta, cohort_pred)
-------------------------------Generating segma matrix----------------------------------------------------------------------
cohort_name <- c(h2$Cohort)
segma.matrix = matrix(NA, ncol=length(cohort_name), nrow=length(cohort_name))
colnames(segma.matrix)=cohort_name
rownames(segma.matrix)=cohort_name

for (i in 1:length(rg$Cohort1)){
	if((rg$Cohort1[i]%in%cohort_name)&(rg$Cohort2[i]%in%cohort_name)){
	segma.matrix[as.character(rg$Cohort1[i]),as.character(rg$Cohort2[i])] = rg$rg[i]
	segma.matrix[as.character(rg$Cohort2[i]),as.character(rg$Cohort1[i])] = rg$rg[i]}
}

for (i in 1:length(h2$Cohort)){
	if(h2$Cohort[i]%in%cohort_name){
	segma.matrix[as.character(h2$Cohort[i]),as.character(h2$Cohort[i])] = h2$h2[i]
}}
--------------------------------Generating rg matrix------------------------------------------------------------------------
rg.matrix = matrix(NA, ncol=length(cohort_name), nrow=length(cohort_name))
colnames(rg.matrix)=cohort_name
rownames(rg.matrix)=cohort_name

for (i in 1:length(rg$Cohort1)){
	if((rg$Cohort1[i]%in%cohort_name)&(rg$Cohort2[i]%in%cohort_name)){
	rg.matrix[as.character(rg$Cohort1[i]),as.character(rg$Cohort2[i])] = rg$rg[i]
	rg.matrix[as.character(rg$Cohort2[i]),as.character(rg$Cohort1[i])] = rg$rg[i]}
}
for (i in 1:length(cohort_name)){rg.matrix[as.character(cohort_name[i]),as.character(cohort_name[i])] = 1}
-----------------------------------Generating NH vector-------------------------------------------------
x <- matrix(h2$N*sqrt(h2$h2))
-----------------------------------Calculating h2-meta----------------------------------------------------------------------
h2_meta_list=data.frame()
for(i in length(cohort_name)-1){
		h2_meta_temp <- data.frame(i,(t(x[1:i]) %*%rg.matrix[1:i,1:i] %*% x[1:i])*(1/sum(h2$N[1:i])^2))
		h2_meta_list <- rbind(h2_meta_list, h2_meta_temp)}
colnames(h2_meta_list) = c("N_cohorts_meta_analysed","h2_cohorts_meta_analysed")
--------------------------------------Calculating r2_pred_vs_meta----------------------------------------------------------
rg_meta_list=data.frame()
for(i in (length(cohort_name)-1)){
	    numerator <- rg.matrix[length(cohort_name),1:i] %*% x[1:i,1]
	    denominator <- sum(h2$N[1:i])*sqrt(h2_meta_list$h2_cohorts_meta_analysed[1])
		rg_meta_temp <- data.frame(i, numerator/denominator)
		rg_meta_list <- rbind(rg_meta_list, rg_meta_temp)}
colnames(rg_meta_list) = c("N_cohorts_meta_analysed","rg_cohorts_meta_analysed")
---------------------------------------------------------------------------------------------------------------------------
SE.matrix = matrix(0, ncol=length(cohort_name), nrow=length(cohort_name))
colnames(SE.matrix)=cohort_name
rownames(SE.matrix)=cohort_name
for (i in 1:length(cohort_name)){SE.matrix[as.character(cohort_name[i]),as.character(cohort_name[i])] = h2$h2_SE[i]}
x <- matrix(h2$N)
SE_meta_list=data.frame()
for(i in 1: length(cohort_name)){
		SE_meta_temp <- data.frame(i,sqrt((t(x[1:i]) %*%SE.matrix[1:i,1:i] %*%t(SE.matrix[1:i,1:i])%*% x[1:i])*(1/sum(h2$N[1:i])^2)))
		SE_meta_list <- rbind(SE_meta_list, SE_meta_temp)}
colnames(SE_meta_list) = c("N_cohorts_meta_analysed","SE_cohorts_meta_analysed")


#Results generated with the code above
h2rg2 - 0.1798789 - Add_Health  h2-LOO 0.1321867 SE-LOO 0.005501285 (0.1321867-1.96* 0.005501285 = 0.1321867-1.96* 0.005501285)
h2rg2 - 0.1693897 - HRS         h2-LOO 0.1320544 SE-LOO 0.005534788 (0.1320544-1.96*0.005534788)

#Input results above. If you've got multiple cohorts, please use a table...
library(ggplot2)
Out_of_sample_R2 <- data.frame(c("Add_Health","HRS"),c(0.127,0.106),c(0.108,0.093),c(0.143,0.121),c(0.1798789, 0.1693897))
cbPalette <- c("#56B4E9","#0072B2","#E69F00","#009E73", "#F0E442","#D55E00", "#CC79A7", "#999999")
colnames(Out_of_sample_R2) <- c("Cohort","R2","R2_CI_low","R2_CI_high","h2rg2")
ggplot(Out_of_sample_R2, aes(x= h2rg2, y=R2, colour=Cohort))+
    geom_errorbar(aes(ymin= R2_CI_low, ymax= R2_CI_high,), width=.001,size=2) +geom_point(size=3)+
    geom_hline(yintercept=0.122, linetype="dashed", color = "red")+
    geom_hline(yintercept=0.122+1.96*0.003, linetype="dashed", color = "dodgerblue")+
    geom_hline(yintercept=0.122-1.96*0.003, linetype="dashed", color = "dodgerblue")+
    geom_vline(xintercept=60000/1131881+ 0.122, linetype="dashed", color = "black")+scale_colour_manual(values=cbPalette)
ggsave("R2_h2_EA.png")    

#0.122 and 0.003 are SNP-based heritability estimates in meta-analysis and se of h2 estimates, please substitute it with your own data
#1131881 is the total sample size in the LOO meta-analysis cohort
